# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
name: Population Reporting System CI/CD
on: [push, pull_request]
jobs:
 build-and-test:
 name: Build and Test
 runs-on: ubuntu-20.04
 steps:
 - name: Checkout repository
 uses: actions/checkout@v2
 - name: Setup .NET Core
 uses: actions/setup-dotnet@v2
 with:
 dotnet-version: '6.0.x'
 - name: Restore dependencies
 run: dotnet restore
 - name: Build the project
 run: dotnet build --configuration Release --no-restore
 - name: Run tests
 run: dotnet test --no-restore --verbosity normal
 docker-build-and-push:
 name: Build and Push Docker Image
 runs-on: ubuntu-20.04
 needs: build-and-test
 steps:
 - name: Checkout repository
 uses: actions/checkout@v2
 - name: Setup Docker Buildx
 uses: docker/setup-buildx-action@v1
 - name: Login to DockerHub
 uses: docker/login-action@v2
 with:
 username: ${{ secrets.DOCKER_USERNAME }}
 password: ${{ secrets.DOCKER_PASSWORD }}
 - name: Build and Push Docker Image
 run: |
 docker buildx build --push --tag myorg/population-reportingsystem:latest .
 deploy:
 name: Deploy to Docker Container
 runs-on: ubuntu-20.04
 needs: docker-build-and-push
 steps:
 - name: SSH into server and deploy
 uses: appleboy/ssh-action@v0.1.2
 with:
 host: ${{ secrets.SERVER_HOST }}
 username: ${{ secrets.SERVER_USERNAME }}
 key: ${{ secrets.SERVER_SSH_KEY }}
 script: |
 docker pull myorg/population-reporting-system:latest
 docker stop population-reporting-system || true
 docker rm population-reporting-system || true
 docker run -d --name population-reporting-system -p 80:80 
myorg/population-reporting-system:latest

